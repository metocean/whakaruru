// Generated by CoffeeScript 1.9.2
var cluster;

cluster = require('cluster');

module.exports = function(cb) {
  var shutdown, toma;
  if (cluster.isWorker) {
    return cb();
  }
  toma = {};
  console.log(process.pid + " Tētē kura");
  cluster.on('exit', function(worker) {
    if (toma[worker.id.toString()] == null) {
      console.log(worker.process.pid + ":" + (worker.id.toString()) + " Whakamātūtū");
      cluster.fork();
    } else {
      console.log(worker.process.pid + ":" + (worker.id.toString()) + " Mōnehu");
    }
    if (Object.keys(cluster.workers).length === 0) {
      return process.exit();
    }
  });
  cluster.on('listening', function(worker, address) {
    var ref;
    return console.log(worker.process.pid + ":" + (worker.id.toString()) + " Whakarongo " + ((ref = address.address) != null ? ref : '0.0.0.0') + ":" + address.port);
  });
  cluster.fork();
  process.on('SIGHUP', function() {
    var worker;
    console.log(process.pid + " Pūangiangi");
    worker = cluster.fork();
    return worker.once('listening', function(address) {
      var child, id, ref, results;
      ref = cluster.workers;
      results = [];
      for (id in ref) {
        child = ref[id];
        if (id.toString() === worker.id.toString()) {
          continue;
        }
        console.log(child.process.pid + ":" + (id.toString()) + " Harapaki");
        toma[id.toString()] = true;
        results.push(child.process.kill());
      }
      return results;
    });
  });
  shutdown = function() {
    var child, id, ref;
    ref = cluster.workers;
    for (id in ref) {
      child = ref[id];
      toma[id.toString()] = true;
      child.process.kill();
    }
    return console.log(process.pid + " Tētē kura manawa kiore");
  };
  process.on('SIGINT', function() {
    console.log(process.pid + " SIGINT");
    return shutdown();
  });
  return process.on('SIGTERM', function() {
    console.log(process.pid + " SIGTERM");
    return shutdown();
  });
};
